const config_service = require('../lib/config_service.js');
config_service.set_config(require('../config.js'), true);
const config = config_service.get_config();
const cors = require('cors');


const fs = require('fs');
const https = require('https');
const Root = require('../controllers/root').Root;
const IDM = require('../lib/idm.js').IDM;
const errorhandler = require('errorhandler');

config.azf = config.azf || {};
config.https = config.https || {};

const log = require('../lib/logger').logger.getLogger('Server');

const express = require('express');

process.on('uncaughtException', function(err) {
  log.error('Caught exception: ' + err);
});
process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

const app = express();


//app.use(express.bodyParser());

app.use(function(req, res, next) {
  const bodyChunks = [];
  req.on('data', function(chunk) {
    bodyChunks.push(chunk);
  });

  req.on('end', function() {
    if (bodyChunks.length > 0) {
      req.body = Buffer.concat(bodyChunks);
    }
    next();
  });
});

app.disable('x-powered-by');
app.use(errorhandler({ log: log.error }));
app.use(cors(config.cors));

let port = config.pep_port || 80;
if (config.https.enabled) {
  port = config.https.port || 443;
}
app.set('port', port);

for (const p in config.public_paths) {
  log.debug('Public paths', config.public_paths[p]);
  app.all(config.public_paths[p], Root.public);
}

app.all('/*', Root.pep);


function connectIDM(callback) {
  IDM.authenticate(
    function(token) {
      log.info('Success authenticating PEP proxy. Proxy Auth-token: ', token);
      callback();
    },
    function(status, e) {
      log.error('Error in IDM communication', e);
      callback(e);
    }
  );
}

if (config.https.enabled === true) {
  const options = {
    key: fs.readFileSync(config.https.key_file),
    cert: fs.readFileSync(config.https.cert_file),
  };

  https
    .createServer(options, function(req, res) {
      app.handle(req, res);
    })
    .listen(app.get('port'));
} else {
  app.listen(app.get('port'));
}

let retry = 20;
function connect() {
  const connect_with_retry = () => {
    connectIDM((err) => {
      if (err) {
        retry--;
        if (retry === 0) {
          log.error('Error found after [%d] attempts: %s', 20, error);
          process.exit(1);
        } else {
          console.log('retry after 5 seconds.');
          //eslint-disable-next-line snakecase/snakecase
          setTimeout(connect_with_retry, 5000);
        }
      } else {
        log.info('Success authenticating PEP proxy.');
      }
    });
  };
  connect_with_retry();
}

log.info('Starting PEP proxy in port ' + port + '. IdM authentication ...');
connect();
